{"version":3,"sources":["components/Travel.js","components/Meat.js","components/WelcomeScreen.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Travel","state","hidden","showBottom","flightData","decisions","carbon","description","hide","e","preventDefault","_this","setState","setTimeout","sendTravelInfo","uInput","document","getElementById","uInput2","userInput","origin","value","destination","init","body","JSON","stringify","method","headers","content-type","fetch","then","response","json","data","refresh","hideForm","react_default","a","createElement","className","autoplay","muted","loop","id","src","type","onSubmit","this","name","index_es","color","direction","duration","easing","oscillationCoefficient","particlesAmountCoefficient","size","speed","style","onClick","Component","Meat","meatData","sendMeatInfo","hideform","placeholder","Math","round","grams_co2e_per_serving","WelcomeScreen","Link","to","NavBar","i","alreadyRunning","navText","words","nestCount","intervalId","setInterval","innerHTML","clearInterval","wordArr","split","writeWordId","shift","length","animateHome","App","BrowserRouter","NavBar_NavBar","Switch","Route","path","exact","component","render","Redirect","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8SAGqBA,6MAEnBC,MAAQ,CACNC,QAAQ,EACRC,YAAY,EAGZC,WAAY,CACVC,UAAW,CACTC,OAAQ,CACNC,YAAa,SAOrBC,KAAO,SAACC,GACNA,EAAEC,iBACFC,EAAKC,SAAS,CACdV,QAASS,EAAKV,MAAMC,SAEpBW,WAAY,WACVF,EAAKG,eAAeL,IACnB,QAILK,eAAiB,SAACL,GAChB,IAAIM,EAASC,SAASC,eAAe,UACjCC,EAAUF,SAASC,eAAe,WAGlCE,EAAY,CACdC,OAAQL,EAAOM,MACfC,YAAaJ,EAAQG,OAGjBE,EAAO,CACXC,KAAMC,KAAKC,UAAUP,GACrBQ,OAAQ,OACRC,QAAS,CACPC,eAAgB,qBAKpBC,MAAK,+BAAiCP,GACnCQ,KAAK,SAACC,GACP,OAAOA,EAASC,SAEfF,KAAK,SAAAG,GACJvB,EAAKC,SAAS,CACZR,WAAY8B,EACZ/B,YAAY,MAOlBa,SAASC,eAAe,UAAUI,MAFhB,IAGlBL,SAASC,eAAe,WAAWI,MAFhB,OAMrBc,QAAU,SAAC1B,GACTE,EAAKC,SAAS,CACZV,QAAQ,EACRC,YAAY,EACZiC,UAAU,6EAKZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOE,SAAS,WAAWC,OAAK,EAACC,MAAI,EAACC,GAAG,WACvCP,EAAAC,EAAAC,cAAA,UAAQM,IAAI,oCAAoCC,KAAK,cACrDT,EAAAC,EAAAC,cAAA,UAAQM,IAAI,oCAAoCC,KAAK,eAGvDT,EAAAC,EAAAC,cAAA,QAAMQ,SAAUC,KAAKxC,MAEnB6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,iDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAjB,OACEH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOG,KAAK,SAAST,UAAU,SAASI,GAAG,YAEzDP,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAjB,KACEH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOG,KAAK,UAAUT,UAAU,UAAUI,GAAG,eAI/DP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAsBC,MAAO,UAC3BC,UAAU,OACVC,SAAU,IACVC,OAAO,cACPC,uBAAwB,EACxBC,2BAA4B,EAC5BC,KAAM,EACNC,MAAO,EACPC,MAAM,OACNb,KAAK,WACL5C,OAAQ8C,KAAK/C,MAAMC,QACnBmC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUM,KAAK,UAAjC,kBAILE,KAAK/C,MAAME,YAAckC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACvCH,EAAAC,EAAAC,cAAA,UAAKS,KAAK/C,MAAMG,WAAWC,UAAUC,OAAOC,aAC5C8B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaoB,QAASZ,KAAKb,SAA7C,sBArHsB0B,aCAfC,6MAEnB7D,MAAQ,CACNC,QAAQ,EACRC,YAAY,EACZiC,UAAU,EACV2B,SAAU,MAIZvD,KAAO,SAACC,GACNA,EAAEC,iBACFC,EAAKC,SAAS,CACZV,QAASS,EAAKV,MAAMC,SAEtBW,WAAW,WACTF,EAAKqD,aAAavD,IACjB,QAILuD,aAAe,SAACvD,GACd,IAGIU,EAAY,CACZ2B,KAJS9B,SAASC,eAAe,UAIpBI,OAIXE,EAAO,CACXC,KAAMC,KAAKC,UAAUP,GACrBQ,OAAQ,OACRC,QAAS,CACPC,eAAgB,qBAKpBC,MAAK,6BAA+BP,GACjCQ,KAAK,SAACC,GACL,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJvB,EAAKC,SAAS,CACZmD,SAAU7B,EACV/B,YAAY,MAMlBa,SAASC,eAAe,UAAUI,MADhB,OAKpBc,QAAU,SAAC1B,GACTE,EAAKC,SAAS,CACZV,QAAQ,EACRC,YAAY,EACZiC,UAAU,6EAKZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOE,SAAS,WAAWC,OAAK,EAACC,MAAI,EAACC,GAAG,WACvCP,EAAAC,EAAAC,cAAA,UAAQM,IAAI,wCAAwCC,KAAK,cACzDT,EAAAC,EAAAC,cAAA,UAAQM,IAAI,wCAAwCC,KAAK,eAE3DT,EAAAC,EAAAC,cAAA,QAAMQ,SAAUC,KAAKxC,KAAM4B,SAAUY,KAAK/C,MAAMgE,UAC9C5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,wCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,eACEH,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOG,KAAK,SAASiB,YAAY,oCAAoC1B,UAAU,SAASI,GAAG,cAI7GP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAsBC,MAAO,UAC3BC,UAAU,OACVC,SAAU,IACVC,OAAO,cACPC,uBAAwB,EACxBC,2BAA4B,EAC5BC,KAAM,EACNC,MAAO,EACPC,MAAM,OACNb,KAAK,WACL5C,OAAQ8C,KAAK/C,MAAMC,QACnBmC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUM,KAAK,UAAjC,kBAILE,KAAK/C,MAAME,YAAckC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACvCH,EAAAC,EAAAC,cAAA,UAAK4B,KAAKC,MAAMpB,KAAK/C,MAAM8D,SAASM,yBACpChC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaoB,QAASZ,KAAKb,SAA7C,sBAtGoB0B,qBCAbS,mLAIjB,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,SAAOE,SAAS,WAAWC,OAAK,EAACC,MAAI,EAACC,GAAG,WACvCP,EAAAC,EAAAC,cAAA,UAAQM,IAAI,gCAAgCC,KAAK,cACjDT,EAAAC,EAAAC,cAAA,UAAQM,IAAI,gCAAgCC,KAAK,eAEnDT,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,WACPnC,EAAAC,EAAAC,cAAA,qDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,SACPnC,EAAAC,EAAAC,cAAA,6DArB6BsB,aCAtBY,mLACV,IAAA9D,EAAAqC,KA6BP,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,YACPnC,EAAAC,EAAAC,cAAA,MAAIK,GAAG,YAAP,YAEFP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,YACPnC,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,WACPnC,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,SACPnC,EAAAC,EAAAC,cAAA,gCAxCQ,SAACmC,GACnB/D,EAAKgE,gBAAiB,EACtB,IAAIC,EAAU,IACVC,EAAQ,CAAC,UACTC,EAAY,EAEZC,EAAaC,YAAY,WAE3B,GADAhE,SAASC,eAAe,YAAYgE,UAAYH,EAAY,IAAM,EAAIF,EAAU,eAAiBA,EAAU,IACzF,IAAdE,EAAiB,CACnBI,cAAcH,GACd,IACII,EADgBN,EAAMH,GACEU,MAAM,IAC9BC,EAAcL,YAAY,WAC5BJ,GAAWO,EAAQG,QACnBtE,SAASC,eAAe,YAAYgE,UAAYE,EAAQI,OAASX,EAAU,IAAMA,EAC5EO,EAAQI,QACXL,cAAcG,IAEf,KAELP,KACC,KAsBIU,CAAY,aAhDW3B,aCwBrB4B,mLAhBX,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAahG,IACzCqC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWlC,IACrCzB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,UAAW1B,IACxCjC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACE,OAAQ,kBAAM5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAU1B,GAAG,WAAWwB,UAAW1B,iBAXjET,aCIEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OAAO5D,EAAAC,EAAAC,cAACkE,EAAD,MAASzF,SAASC,eAAe,SD2H3C,kBAAmByF,WACrBA,UAAUC,cAAcC,MAAM7E,KAAK,SAAA8E,GACjCA,EAAaC","file":"static/js/main.7122bfd5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ParticleEffectButton from 'react-particle-effect-button';\r\n\r\nexport default class Travel extends Component {\r\n  //button effect and onSubmit function states initialization\r\n  state = {\r\n    hidden: false,\r\n    showBottom: false,\r\n    // hideForm: true,\r\n    \r\n    flightData: {\r\n      decisions: {\r\n        carbon: {\r\n          description: ''\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // keeps button on the screen until clicked, has a timeout to make sure that the button effect plays out before the onClick event happens\r\n  hide = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n    hidden: !this.state.hidden,\r\n    })\r\n    setTimeout( () => {\r\n      this.sendTravelInfo(e);\r\n    }, 1000)\r\n  }\r\n\r\n  // onSubmit collects input data\r\n  sendTravelInfo = (e) => {\r\n    let uInput = document.getElementById('uInput');\r\n    let uInput2 = document.getElementById('uInput2');\r\n\r\n  //new object created that stores the user inputs\r\n    let userInput = {\r\n      origin: uInput.value,\r\n      destination: uInput2.value\r\n    }\r\n      \r\n    const init = {\r\n      body: JSON.stringify(userInput),\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n        }\r\n    };\r\n    \r\n    // fetches collected data from backend and send it to the front-end\r\n    fetch(`http://localhost:8080/travel`, init)\r\n      .then((response) => {\r\n      return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          flightData: data, \r\n          showBottom: true,\r\n          })            \r\n        });\r\n\r\n    //clears out input in the input field to prepare for next user\r\n    let uInputClear = \" \";\r\n    let uInputClear2 = \" \";\r\n    document.getElementById('uInput').value = uInputClear;\r\n    document.getElementById('uInput2').value = uInputClear2;\r\n  };\r\n\r\n  //acts onClick of a refresh button to put the form back to initial state with no information\r\n  refresh = (e) => {\r\n    this.setState({\r\n      hidden: false,\r\n      showBottom: false,\r\n      hideForm: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"componentParent\">\r\n        <video autoplay=\"autoplay\" muted loop id=\"myVideo\" >\r\n          <source src=\"/Assets/Videos/People Waiting.mp4\" type=\"video/mp4\" />\r\n          <source src=\"/Assets/Videos/People Waiting.mp4\" type=\"video/ogg\" />\r\n        </video>\r\n        {/* this.hide - hides the button after the effect has played out */}\r\n        <form onSubmit={this.hide} >\r\n          {/* hideForm={this.state.hideform} */}\r\n          <div className=\"formParent\">\r\n            <h2 className=\"travelH2\">Please, input your departure and destination:</h2>\r\n            <div className=\"formChild\">\r\n              <label className=\"travelLabels\">From\r\n                <input type=\"text\" name=\"uInput\" className=\"uInput\" id=\"uInput\" />\r\n              </label>\r\n              <label className=\"travelLabels\">To\r\n                <input type=\"text\" name=\"uInput2\" className=\"uInput2\" id=\"uInput2\"/>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <ParticleEffectButton color={\"#1e90ff\"}\r\n              direction=\"left\"\r\n              duration={800}\r\n              easing=\"easeOutSine\"\r\n              oscillationCoefficient={1}\r\n              particlesAmountCoefficient={7}\r\n              size={3}\r\n              speed={3}\r\n              style=\"fill\"\r\n              type=\"triangle\"\r\n              hidden={this.state.hidden}>\r\n              <button className=\"sbmtBtn\" type=\"submit\">Submit Here</button> \r\n            </ParticleEffectButton>\r\n          </div>\r\n        </form>\r\n        {this.state.showBottom && <div className=\"calcResultsParent\">\r\n          <h1>{this.state.flightData.decisions.carbon.description}</h1>\r\n          <div className=\"calcResultsChild\">  \r\n            <h2>of CO2 equivalent</h2>\r\n            <div className=\"resultsLastDiv\">  \r\n              <h3>will be emitted</h3>\r\n              <button className=\"refreshBtn\" onClick={this.refresh}>Refresh</button>\r\n            </div>  \r\n          </div>    \r\n        </div>}  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ParticleEffectButton from 'react-particle-effect-button';\r\n\r\nexport default class Meat extends Component {\r\n  //button effect and onSubmit function states initialization\r\n  state = {\r\n    hidden: false,\r\n    showBottom: false,\r\n    hideForm: true,\r\n    meatData: []\r\n  }\r\n\r\n  // keeps button on the screen until clicked, has a timeout to make sure that the button effect plays out before the onClick event happens\r\n  hide = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      hidden: !this.state.hidden,\r\n    })\r\n    setTimeout(() => {\r\n      this.sendMeatInfo(e);\r\n    }, 1000)\r\n  }\r\n\r\n  // onSubmit collects input data\r\n  sendMeatInfo = (e) => {\r\n    let uInput = document.getElementById('uInput');\r\n\r\n    //new object created that stores the user inputs\r\n    let userInput = {\r\n        type: uInput.value\r\n    }\r\n    \r\n\r\n    const init = {\r\n      body: JSON.stringify(userInput),\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    };\r\n\r\n    // fetches collected data from backend and send it to the front-end\r\n    fetch(`http://localhost:8080/meat`, init)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          meatData: data,\r\n          showBottom: true   \r\n          })\r\n      });\r\n\r\n    //clears out input in the input field to prepare for next user  \r\n    let uInputClear = \" \";\r\n    document.getElementById('uInput').value = uInputClear;\r\n  };\r\n\r\n  //acts onClick of a refresh button to put the form back to initial state with no information\r\n  refresh = (e) => {\r\n    this.setState({\r\n      hidden: false,\r\n      showBottom: false,\r\n      hideForm: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"componentParent\">\r\n        <video autoplay=\"autoplay\" muted loop id=\"myVideo\" >\r\n          <source src=\"/Assets/Videos/Pexels Videos 4947.mp4\" type=\"video/mp4\" />\r\n          <source src=\"/Assets/Videos/Pexels Videos 4947.mp4\" type=\"video/ogg\" />\r\n        </video>\r\n        <form onSubmit={this.hide} hideForm={this.state.hideform}>\r\n          <div className=\"formParent\">\r\n            <h2 className=\"travelH2 meatH2\">What type of meat did you eat today?</h2>\r\n            <div className=\"formChild\">\r\n              <label className=\"meatLabels\">Type of Meat\r\n                <input type=\"text\" name=\"uInput\" placeholder=\"beef, pork, turkey, chicken, lamb\" className=\"uInput\" id=\"uInput\"></input>\r\n              </label>\r\n             </div> \r\n          </div>\r\n          <div className=\"meatBtn\">\r\n            <ParticleEffectButton color={\"#ff7700\"}\r\n              direction=\"left\"\r\n              duration={800}\r\n              easing=\"easeOutSine\"\r\n              oscillationCoefficient={1}\r\n              particlesAmountCoefficient={7}\r\n              size={3}\r\n              speed={3}\r\n              style=\"fill\"\r\n              type=\"triangle\"\r\n              hidden={this.state.hidden}>\r\n              <button className=\"sbmtBtn\" type=\"submit\">Submit Here</button>\r\n            </ParticleEffectButton>\r\n          </div>\r\n        </form>\r\n        {this.state.showBottom && <div className=\"calcResultsParent\">\r\n          <h2>{Math.round(this.state.meatData.grams_co2e_per_serving)}</h2>\r\n          <div>\r\n            <h2>grams of CO2e per serving</h2>\r\n            <div className=\"resultsLastDiv\">\r\n              <h3>have been emitted</h3>\r\n              <button className=\"refreshBtn\" onClick={this.refresh}>Refresh</button>\r\n            </div>   \r\n          </div>\r\n        </div>}  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class WelcomeScreen extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"ancestorContainer\">\r\n        <video autoplay=\"autoplay\" muted loop id=\"myVideo\" >\r\n          <source src=\"/Assets/Videos/Indian Tea.mp4\" type=\"video/mp4\" />\r\n          <source src=\"/Assets/Videos/Indian Tea.mp4\" type=\"video/ogg\" />\r\n        </video>\r\n        <h1>Carbon Footprint Calculator</h1>\r\n        <div className=\"leftRightDivHolder\">\r\n          <div className=\"leftDiv\">\r\n            <span>Hover here</span>\r\n            <Link to=\"/travel\">\r\n              <h2>What's your air travel carbon impact?</h2>\r\n            </Link>\r\n          </div>\r\n          <div className=\"rightDiv\">\r\n            <span>Or here...</span> \r\n            <Link to=\"/meat\">\r\n              <h2>What's your meat diet carbon impact?</h2>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n\r\n    //typing effect animation on the logo code starts\r\n    //Source: Jake Maldonado\r\n    const animateHome = (i) => {\r\n      this.alreadyRunning = true;\r\n      let navText = 'b';\r\n      let words = ['igfoot'];\r\n      let nestCount = 1;\r\n\r\n      let intervalId = setInterval(() => {\r\n        document.getElementById('nav-home').innerHTML = nestCount % 2 === 0 ? navText + '&nbsp;&nbsp;' : navText + '|';\r\n        if (nestCount === 0) {\r\n          clearInterval(intervalId);\r\n          let wordToAnimate = words[i];\r\n          let wordArr = wordToAnimate.split('');\r\n          let writeWordId = setInterval(() => {\r\n            navText += wordArr.shift();\r\n            document.getElementById('nav-home').innerHTML = wordArr.length ? navText + '|' : navText;\r\n            if (!wordArr.length) {\r\n              clearInterval(writeWordId);\r\n            }\r\n          }, 200);\r\n        }\r\n        nestCount--;\r\n      }, 400);\r\n    }\r\n    //typing effect animation on the logo code ends\r\n\r\n    return (\r\n      <div className=\"navBarGrandParent\">\r\n        <div className=\"navBarParent\">\r\n          <div className=\"navBarChild\">\r\n            <Link to=\"/welcome\">\r\n              <h1 id='nav-home'>bigfoot</h1>\r\n            </Link>\r\n            <ul>\r\n              <Link to=\"/welcome\">\r\n                <li>Main</li>\r\n              </Link>\r\n              <Link to=\"/travel\">\r\n                <li>Travel Impact</li>\r\n              </Link>\r\n              <Link to=\"/meat\">\r\n                <li>Meat Diet Impact</li>\r\n              </Link>\r\n            </ul>\r\n            {animateHome(0)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Travel from './components/Travel';\nimport Meat from './components/Meat';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport NavBar from './components/NavBar';\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path='/travel' exact component = {Travel} />\n            <Route path='/meat' exact component={Meat} />\n            <Route path='/welcome' exact component={WelcomeScreen} />\n            <Route path='/' exact render={() => <Redirect to='/welcome' component={WelcomeScreen} />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}